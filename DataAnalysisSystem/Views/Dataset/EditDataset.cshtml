@model DataAnalysisSystem.DTO.DatasetDTO.EditDatasetViewModel
@using DataAnalysisSystem.DTO.AdditionalFunctionalities
@using DataAnalysisSystem.DTO.Scripts

@{
    ViewData["Title"] = "Edit Dataset";
}

<div class="row" style="margin-top: 5vh; margin-bottom: 5vh">
    <div class="col s12">

        <div class="card" style="display:block;">
            <div class="card-content">
                <span class="card-title center">Edit dataset</span>

                <form id="EditDatasetForm" method="post" asp-action="EditDataset" asp-controller="Dataset" onsubmit="openModalWaiter()">

                    <input type="text" asp-for="DatasetIdentificator" hidden readonly>

                    <div class="row">
                        <div class="col 6 left">
                            <input type="text" asp-for="DatasetName" required="" aria-required="true" class="validate">
                            <label asp-for="DatasetName"></label>
                        </div>

                        <div class="col 6 right">
                            <input type="text" asp-for="DateOfEdition" readonly disabled>
                            <input type="text" asp-for="DateOfEdition" readonly hidden>
                            <label asp-for="DateOfEdition"></label>
                        </div>
                    </div>

                    <div class="left-align" style="margin-top: 10px">
                        <button class="btn waves-effect waves-light" type="submit" id="submitButton">
                            Edit
                        </button>
                        <a asp-action="DatasetDetails" asp-controller="Dataset" asp-route-datasetIdentificator="@Model.DatasetIdentificator" type="button" class="waves-effect waves-red btn-flat">Cancel</a>
                    </div>

                    <div class="progress" id="dataTableLoadingIndicator" style="margin-top:30px;">
                        <div class="indeterminate"></div>
                    </div>

                    <table id="datasetContentTable" class="row-border" cellspacing="0" width="100%" style="display:none">
                        <thead>

                            <tr>
                                <th>
                                    Delete?
                                </th>

                                @for (int i = 0; i < Model.DatasetContent.NumberColumns.Count() + Model.DatasetContent.StringColumns.Count(); i++)
                                {
                                    var numberColumn = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == i).FirstOrDefault();

                                    if (numberColumn != null)
                                    {
                                        int index = Model.DatasetContent.NumberColumns.IndexOf(numberColumn);

                                        <th>
                                            <input asp-for="DatasetContent.NumberColumns[index].AttributeName" value="@Model.DatasetContent.NumberColumns[index].AttributeName" required="" aria-required="true" class="validate" onclick="StopEventPropagation(event)" style="width:auto" />
                                            <span asp-validation-for="DatasetContent.NumberColumns[index].AttributeName" class="helper-text" style="color: #F44336" onclick="StopEventPropagation(event)"></span>
                                            <p class="center" onclick="StopEventPropagation(event)">
                                                <label>
                                                    <input asp-for="@Model.DatasetContent.NumberColumns[index].ColumnToDelete" type="checkbox" class="filled-in" />
                                                    <span></span>
                                                </label>
                                            </p>
                                        </th>
                                    }
                                    else
                                    {
                                        var stringColumn = Model.DatasetContent.StringColumns.Where(z => z.PositionInDataset == i).FirstOrDefault();
                                        int index = Model.DatasetContent.StringColumns.IndexOf(stringColumn);

                                        <th>
                                            <input asp-for="DatasetContent.StringColumns[index].AttributeName" value="@Model.DatasetContent.StringColumns[index].AttributeName" required="" aria-required="true" class="validate" onclick="StopEventPropagation(event)" style="width:auto" />
                                            <span asp-validation-for="DatasetContent.StringColumns[index].AttributeName" class="helper-text" style="color: #F44336" onclick="StopEventPropagation(event)"></span>

                                            <p class="center" onclick="StopEventPropagation(event)">
                                                <label>
                                                    <input asp-for="@Model.DatasetContent.StringColumns[index].ColumnToDelete" type="checkbox" class="filled-in" />
                                                    <span></span>
                                                </label>
                                            </p>
                                        </th>
                                    }
                                }
                            </tr>

                        </thead>
                        <tbody>

                            @for (int i = 0; i < Model.DatasetContent.NumberColumns.FirstOrDefault().AttributeValue.Count(); i++)
                            {
                                var n = 0;
                                var s = 0;

                                <tr>
                                    <td>
                                        <p class="center">
                                            <label>
                                                <input asp-for="@Model.DatasetContent.RowsToDelete[i]" type="checkbox" class="filled-in" />
                                                <span></span>
                                            </label>
                                        </p>
                                    </td>

                                    @for (int j = 0; j < Model.DatasetContent.NumberColumns.Count() + Model.DatasetContent.StringColumns.Count(); j++)
                                    {
                                        var numberColumn = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();
                                        var position = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();

                                        if (numberColumn != null)
                                        {
                                            <td>
                                                <textarea asp-for="DatasetContent.NumberColumns[n].AttributeValue[i]" class="validate" oninput="auto_grow(this)"></textarea>
                                                <span asp-validation-for="DatasetContent.NumberColumns[n].AttributeValue[i]" class="helper-text" style="color: #F44336"></span>

                                                <input asp-for="DatasetContent.NumberColumns[n].PositionInDataset" value="@Model.DatasetContent.NumberColumns[n].PositionInDataset" readonly hidden />

                                                @{n++;}
                                            </td>
                                        }
                                        else
                                        {
                                            var stringColumn = Model.DatasetContent.StringColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();

                                            <td>
                                                <textarea asp-for="DatasetContent.StringColumns[s].AttributeValue[i]" class="validate" oninput="auto_grow(this)"></textarea>
                                                <span asp-validation-for="DatasetContent.StringColumns[s].AttributeValue[i]" class="helper-text" style="color: #F44336"></span>

                                                <input asp-for="DatasetContent.StringColumns[s].PositionInDataset" value="@Model.DatasetContent.StringColumns[s].PositionInDataset" readonly hidden />

                                                @{s++;}
                                            </td>
                                        }
                                    }
                                </tr>
                            }

                        </tbody>
                    </table>
                </form>
            </div>
        </div>
    </div>
</div>

@await Component.InvokeAsync("ModalBottomSheetWindow", new ModalBottomSheetViewModel
       {
           ModalIdentificator = "modalWaiter",
           ModalHeader = "Updating a dataset.",
           ModalPrimaryText = "This may take a while."
       })

@section Scripts{

    @{await Html.RenderPartialAsync("_ModalBottomSheetScript", new ModalBottomSheetScriptViewModel { ModalIdentificator = "modalWaiter", ModalDismissible = false });}
    @{await Html.RenderPartialAsync("_ValidateFormAndOpenModalScript", new ValidateFormAndOpenModalScriptViewModel { FormId = "EditDatasetForm", ModalId = "modalWaiter" });}

    <script>
        function StopEventPropagation(event) {
            if (event.stopPropagation) {
                event.stopPropagation();
            }
            else if (window.event) {
                window.event.cancelBubble = true;
            }
        }
    </script>

    <script>
        function auto_grow(element) {
            element.style.height = "5px";
            element.style.height = (element.scrollHeight) + "px";
        }

        $(document).ready(function () {
            $("#datasetContentTable").show();
            $('div#dataTableLoadingIndicator').hide();

            $("#datasetContentTable").DataTable({ processing: true, language: { search: "", searchPlaceholder: "Enter search term" }, order: [0, "asc"], dom: 'ft<"footer-wrapper"l<"paging-info"ip>>', scrollX: true, scrollCollapse: !0, pagingType: "full_numbers", drawCallback: function (t) { var e = this.api(); $(e.table().container()).find(".paginate_button").addClass("waves-effect"), e.table().columns.adjust() } });
            jQuery("select").not(".disabled").formSelect();
        });

        @{var rows = 0;

            if (Model.DatasetContent != null)
            {
                if (Model.DatasetContent.NumberColumns.Count() != 0)
                {
                    rows = Model.DatasetContent.NumberColumns.FirstOrDefault().AttributeValue.Count();
                }
                else
                {
                    rows = Model.DatasetContent.StringColumns.FirstOrDefault().AttributeValue.Count();
                }
            }
        }

        $('#submitButton').click(function () {
                var oTable = $('#datasetContentTable').DataTable();
                oTable.page.len(@rows).draw();
            });

    </script>
}

@section Notification
{
    @{await Html.RenderPartialAsync("_NotificationMenuValidation", new NotificationMenuViewModel { NotificationContainerId = "notificationContainer" });}
}