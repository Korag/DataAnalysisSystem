@model DataAnalysisSystem.DTO.DatasetDTO.EditDatasetViewModel
@using DataAnalysisSystem.DTO.AdditionalFunctionalities
@using DataAnalysisSystem.DTO.Scripts

@{
    ViewData["Title"] = "Edit Dataset";
}

<div class="row">
    <div class="col s12">

        <div class="card" style="display:block; margin-bottom: 5vh">
            <div class="card-content">
                <span class="card-title center">Edit dataset</span>

                <form id="EditDatasetForm" method="post" asp-action="EditDataset" asp-controller="Dataset" onsubmit="openModalWaiter()">

                    <input type="text" asp-for="DatasetIdentificator" hidden readonly>

                    <div class="row">
                        <div class="col 6 left">
                            <input type="text" asp-for="DatasetName" required="" aria-required="true" class="validate">
                            <label asp-for="DatasetName"></label>
                        </div>

                        <div class="col 6 right">
                            <input type="text" asp-for="DateOfEdition" readonly disabled>
                            <label asp-for="DateOfEdition"></label>
                        </div>
                    </div>

                    <table id="table-custom-elements" class="row-border" style="text-align:center" cellspacing="0" width="100%">
                        <thead>

                            <tr>
                                @for (int i = 0; i < Model.DatasetContent.NumberColumns.Count() + Model.DatasetContent.StringColumns.Count(); i++)
                                {
                                    var numberColumn = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == i).FirstOrDefault();

                                    if (numberColumn != null)
                                    {
                                        @*<th>@numberColumn.AttributeName</th>*@
                                        <th>
                                            <input asp-for="@numberColumn.AttributeName" value="@numberColumn.AttributeName" required="" aria-required="true" class="validate" />
                                            <span asp-validation-for="@numberColumn" class="helper-text" style="color: #F44336"></span>
                                        </th>
                                    }
                                    else
                                    {
                                        var stringColumn = Model.DatasetContent.StringColumns.Where(z => z.PositionInDataset == i).FirstOrDefault();
                                        @*<th>@stringColumn.AttributeName</th>*@
                                        <th>
                                            <input asp-for="@stringColumn.AttributeName" value="@stringColumn.AttributeName" required="" aria-required="true" class="validate" />
                                            <span asp-validation-for="@stringColumn" class="helper-text" style="color: #F44336"></span>
                                        </th>
                                    }
                                }
                            </tr>

                        </thead>
                        <tbody>

                            @for (int i = 0; i < Model.DatasetContent.NumberColumns.FirstOrDefault().AttributeValue.Count(); i++)
                            {
                                var n = 0;
                                var s = 0;

                                <tr>
                                    @for (int j = 0; j < Model.DatasetContent.NumberColumns.Count() + Model.DatasetContent.StringColumns.Count(); j++)
                                    {
                                        var numberColumn = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();
                                        var position = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();

                                        if (numberColumn != null)
                                        {
                                            <td>
                                                @*onload="auto_grow(this)" data-autoresize*@
                                                <textarea asp-for="DatasetContent.NumberColumns[n].AttributeValue[i]" class="validate" oninput="auto_grow(this)"></textarea>
                                                <span asp-validation-for="DatasetContent.NumberColumns[n].AttributeValue[i]" class="helper-text" style="color: #F44336"></span>

                                                @*<input asp-for="DatasetContent.NumberColumns[n].AttributeName" value="@Model.DatasetContent.NumberColumns[n].AttributeName" readonly hidden />*@
                                                <input asp-for="DatasetContent.NumberColumns[n].PositionInDataset" value="@Model.DatasetContent.NumberColumns[n].PositionInDataset" readonly hidden />

                                                @{n++;}
                                            </td>
                                        }
                                        else
                                        {
                                            var stringColumn = Model.DatasetContent.StringColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();

                                            <td>
                                                @*oninput="auto_grow(this)" data-autoresize*@
                                                <textarea asp-for="DatasetContent.StringColumns[s].AttributeValue[i]" class="validate" oninput="auto_grow(this)"></textarea>
                                                <span asp-validation-for="DatasetContent.StringColumns[s].AttributeValue[i]" class="helper-text" style="color: #F44336"></span>

                                                @*<input asp-for="DatasetContent.StringColumns[s].AttributeName" value="@Model.DatasetContent.StringColumns[s].AttributeName" readonly hidden />*@
                                                <input asp-for="DatasetContent.StringColumns[s].PositionInDataset" value="@Model.DatasetContent.StringColumns[s].PositionInDataset" readonly hidden />

                                                @{s++;}
                                            </td>
                                        }
                                    }
                                </tr>
                            }

                        </tbody>
                    </table>
                </form>
            </div>
        </div>
    </div>
</div>

@await Component.InvokeAsync("ModalBottomSheetWindow", new ModalBottomSheetViewModel
       {
           ModalIdentificator = "modalWaiter",
           ModalHeader = "Saving a dataset.",
           ModalPrimaryText = "This may take a while."
       })

@section Scripts{

    @{await Html.RenderPartialAsync("_ModalBottomSheetScript", new ModalBottomSheetScriptViewModel { ModalIdentificator = "modalWaiter", ModalDismissible = false });}


    <script>
        function auto_grow(element) {
            element.style.height = "5px";
            element.style.height = (element.scrollHeight) + "px";
        }

        //$.each($('textarea[data-autoresize]'), function () {
        //    var offset = this.offsetHeight - this.clientHeight;
        //    var resizeTextarea = function (el) {
        //        $(el).css('height', 'auto').css('height', el.scrollHeight + offset);
        //    };
        //    $(this).each(function () {
        //        resizeTextarea(this);
        //    }).removeAttr('data-autoresize');
        //});

        function openModalWaiter() {
            var form = $("#EditDatasetForm");
            form.validate();

            if (form.valid()) {
                $('#modalWaiter').modal('open');
            }
        }

        $(document).ready(function () {
            $("#table-custom-elements").DataTable({ processing: true, language: { search: "", searchPlaceholder: "Enter search term" }, order: [0, "asc"], dom: 'ft<"footer-wrapper"l<"paging-info"ip>>', scrollX: true, scrollCollapse: !0, pagingType: "full_numbers", drawCallback: function (t) { var e = this.api(); $(e.table().container()).find(".paginate_button").addClass("waves-effect"), e.table().columns.adjust() } });
            jQuery("select").not(".disabled").formSelect();

        });

        @{var rows = 0;

            if (Model.DatasetContent != null)
            {
                if (Model.DatasetContent.NumberColumns.Count() != 0)
                {
                    rows = Model.DatasetContent.NumberColumns.FirstOrDefault().AttributeValue.Count();
                }
                else
                {
                    rows = Model.DatasetContent.StringColumns.FirstOrDefault().AttributeValue.Count();
                }
            }
        }

        $('#submitButton').click(function () {
                var oTable = $('#table-custom-elements').DataTable();
                oTable.page.len(@rows).draw();
            });

    </script>

}

@section Notification
{
    <div class="row">
        <div class="col s8 offset-s2">

            <div asp-validation-summary="ModelOnly" class="row justify-content-center alert alert-danger validation-model"></div>

            @if (ViewData["Message"] != null)
            {

                <h2 class="alert alert-info" role="alert">@ViewData["Message"]</h2>
            }

        </div>
    </div>
}