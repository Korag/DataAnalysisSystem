@model DataAnalysisSystem.DTO.DatasetDTO.AddNewDatasetViewModel
@using DataAnalysisSystem.DTO.AdditionalFunctionalities
@using DataAnalysisSystem.DTO.Scripts

@{
    ViewData["Title"] = "Add new dataset";
}

<div class="row" style="margin-bottom:0px">

    <div class="col s8 offset-s2" style="margin-top: 5vh">
        <div class="card">
            <div class="card-content">
                <span class="card-title center-align">Add new Dataset</span>

                @if (Model.DatasetContent != null)
                {
                    <form id="AddNewDatasetForm" method="post" asp-action="AddNewDataset" asp-controller="Dataset" enctype="multipart/form-data" onsubmit="openModalWaiter()">
                        <fieldset disabled="disabled" style="border-width: 0px">

                            <div class="input-field" style="width:70%; margin:auto;">

                                <i class="material-icons prefix">input</i>
                                <input type="text" asp-for="DatasetName" required="" aria-required="true" class="validate">
                                <label asp-for="DatasetName"></label>

                            </div>

                            <div class="file-field">

                                <div class="btn teal darken-4 tooltipped" data-position="left" data-tooltip="Supported formats: .csv, .json, .xml, .xls, .xlsx">
                                    <span>Dataset</span>
                                    <input asp-for="DatasetFile" type="file">
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text" placeholder="Upload dataset" accept=".txt,.csv,.xml,.json,.xls,.xlsx">
                                </div>

                            </div>

                            <ul class="collapsible" style="width:50%; margin-right:0px; margin-left: auto;">
                                <li>
                                    <div class="collapsible-header"><i class="material-icons">call_merge</i>Additional parameters</div>
                                    <div class="collapsible-body">
                                        <ul class="collapsible popout">
                                            <li>
                                                <div class="collapsible-header"><label asp-for="AdditionalParameters.Delimiter"></label></div>
                                                <div class="collapsible-body">
                                                    <input type="text" asp-for="AdditionalParameters.Delimiter" value=";" class="disabled">
                                                </div>
                                            </li>
                                        </ul>
                                    </div>
                                </li>
                            </ul>

                            <div class="center-align" style="margin-top: 10px">
                                <input class="btn modal-trigger" type="submit" value="Load">
                            </div>

                        </fieldset>
                    </form>
                }
                else
                {
                    <form id="AddNewDatasetForm" method="post" asp-action="AddNewDataset" asp-controller="Dataset" enctype="multipart/form-data" onsubmit="openModalWaiter()">

                        <div class="input-field" style="width:70%; margin:auto;">

                            <i class="material-icons prefix">input</i>
                            <input type="text" asp-for="DatasetName" required="" aria-required="true" class="validate">
                            <label asp-for="DatasetName"></label>

                            <span asp-validation-for="DatasetName" class="helper-text" style="color: #F44336"></span>

                        </div>

                        <div class="file-field">

                            <div class="btn teal darken-4 tooltipped" data-position="left" data-tooltip="Supported formats: .csv, .json, .xml, .xls, .xlsx">
                                <span>Dataset</span>
                                <input asp-for="DatasetFile" type="file">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Upload dataset" accept=".txt,.csv,.xml,.json,.xls,.xlsx">
                            </div>

                            <span asp-validation-for="DatasetFile" class="helper-text" style="color: #F44336"></span>
                        </div>

                        <ul class="collapsible" style="width:50%; margin-right:0px; margin-left: auto;">
                            <li>
                                <div class="collapsible-header"><i class="material-icons">call_merge</i>Additional parameters</div>
                                <div class="collapsible-body">
                                    <ul class="collapsible popout">
                                        <li>
                                            <div class="collapsible-header"><label asp-for="AdditionalParameters.Delimiter"></label></div>
                                            <div class="collapsible-body">
                                                <input type="text" asp-for="AdditionalParameters.Delimiter" value="," class="disabled">
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </li>
                        </ul>

                        <div class="center-align" style="margin-top: 10px">
                            <input class="btn" type="submit" value="Load">
                        </div>

                    </form>
                }
            </div>
        </div>

    </div>
</div>

@if (Model.DatasetContent != null)
{
<form id="DatasetContentForm" method="post" asp-action="SaveNewDataset" asp-controller="Dataset" onsubmit="openModalWaiter2()">

    <input type="text" asp-for="DatasetName" hidden readonly>
    <input type="text" asp-for="InputFileName" hidden readonly>
    <input type="text" asp-for="InputFileFormat" hidden readonly>

    <div class="row">
        <div class="col s12">

            <div class="card" style="display:block; margin-bottom: 5vh">
                <div class="card-content">
                    <span class="card-title">Dataset</span>
                    <div class="left-align" style="margin-top: 10px">
                        <input class="btn modal-trigger" type="submit" value="Save">
                        <a asp-action="AddNewDataset" asp-controller="Dataset" type="button" class="waves-effect waves-red btn-flat">Cancel</a>
                    </div>
                </div>

                <table id="table-custom-elements" class="row-border" cellspacing="0">
                    <thead>
                        @*<tr>
                                @foreach (var column in Model.DatasetContent.NumberColumns)
                                {
                                    <th>@column.AttributeName</th>
                                }
                                @foreach (var column in Model.DatasetContent.StringColumns)
                                {
                                    <th>@column.AttributeName</th>
                                }
                            </tr>*@

                        <tr>
                            @for (int i = 0; i < Model.DatasetContent.NumberColumns.Count() + Model.DatasetContent.StringColumns.Count(); i++)
                            {
                                var numberColumn = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == i).FirstOrDefault();

                                if (numberColumn != null)
                                {
                                    <th>@numberColumn.AttributeName</th>
                                }
                                else
                                {
                                    <th>@Model.DatasetContent.StringColumns.Where(z => z.PositionInDataset == i).FirstOrDefault().AttributeName</th>
                                }
                            }
                        </tr>

                    </thead>
                    <tbody>

                        @*@for (int i = 0; i < Model.DatasetContent.NumberColumns.FirstOrDefault().AttributeValue.Count(); i++)
                            {
                                <tr>
                                    @for (int j = 0; j < Model.DatasetContent.NumberColumns.Count(); j++)
                                    {
                                        <td>@Model.DatasetContent.NumberColumns.ElementAt(j).AttributeValue.ElementAt(i)</td>
                                    }
                                    @for (int j = 0; j < Model.DatasetContent.StringColumns.Count(); j++)
                                    {
                                        <td>@Model.DatasetContent.StringColumns.ElementAt(j).AttributeValue.ElementAt(i)</td>
                                    }
                                </tr>
                            }*@

                        @for (int i = 0; i < Model.DatasetContent.NumberColumns.FirstOrDefault().AttributeValue.Count(); i++)
                        {
                            <tr>
                                @for (int j = 0; j < Model.DatasetContent.NumberColumns.Count() + Model.DatasetContent.StringColumns.Count(); j++)
                                {

                                    var numberColumn = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();

                                    if (numberColumn != null)
                                    {
                                        <td>@numberColumn.AttributeValue.ElementAt(i)</td>
                                    }
                                    else
                                    {
                                        <td>@Model.DatasetContent.StringColumns.Where(z => z.PositionInDataset == j).FirstOrDefault().AttributeValue.ElementAt(i)</td>
                                    }
                                }
                            </tr>
                        }

                    </tbody>
                </table>
            </div>

        </div>
    </div>

    @for (int i = 0; i < Model.DatasetContent.NumberColumns.FirstOrDefault().AttributeValue.Count(); i++)
    {
        @for (int j = 0; j < Model.DatasetContent.NumberColumns.Count(); j++)
        {
            <input asp-for="DatasetContent.NumberColumns[j].AttributeValue[i]" value="@Model.DatasetContent.NumberColumns[j].AttributeValue[i]" readonly hidden />
            <input asp-for="DatasetContent.NumberColumns[j].AttributeName" value="@Model.DatasetContent.NumberColumns[j].AttributeName" readonly hidden />
            <input asp-for="DatasetContent.NumberColumns[j].PositionInDataset" value="@Model.DatasetContent.NumberColumns[j].PositionInDataset" readonly hidden />
        }
        @for (int j = 0; j < Model.DatasetContent.StringColumns.Count(); j++)
        {
            <input asp-for="DatasetContent.StringColumns[j].AttributeValue[i]" value="@Model.DatasetContent.StringColumns[j].AttributeValue[i]" readonly hidden />
            <input asp-for="DatasetContent.StringColumns[j].AttributeName" value="@Model.DatasetContent.StringColumns[j].AttributeName" readonly hidden />
            <input asp-for="DatasetContent.StringColumns[j].PositionInDataset" value="@Model.DatasetContent.StringColumns[j].PositionInDataset" readonly hidden />
        }
    }

</form>
}

@await Component.InvokeAsync("ModalBottomSheetWindow", new ModalBottomSheetViewModel
                                                        {
                                                         ModalIdentificator = "modalWaiter",
                                                         ModalHeader = "Loading a dataset.",
                                                         ModalPrimaryText = "This may take a while."
                                                        })

@section Scripts{

    @{await Html.RenderPartialAsync("_ModalBottomSheetScript", new ModalBottomSheetScriptViewModel { ModalIdentificator = "modalWaiter", ModalDismissible = false });}

    <script>
        function openModalWaiter() {
            var form = $("#AddNewDatasetForm");
            form.validate();

            if (form.valid()) {
                $('#modalWaiter').modal('open');
            }
        }

        function openModalWaiter2() {
            var form = $("#DatasetContentForm");
            form.validate();

            if (form.valid()) {
                $('#modalWaiter').modal('open');
            }
        }

        $(document).ready(function () {
            $('.tooltipped').tooltip();
        });

        $(document).ready(function () {
            $('.collapsible').collapsible();
        });

        $(document).ready(function () {
            $("#table-custom-elements").DataTable({ language: { search: "", searchPlaceholder: "Enter search term" }, order: [0, "asc"], dom: 'ft<"footer-wrapper"l<"paging-info"ip>>', scrollY: "600px", scrollCollapse: !0, pagingType: "full_numbers", drawCallback: function (t) { var e = this.api(); $(e.table().container()).find(".paginate_button").addClass("waves-effect"), e.table().columns.adjust() } });
            jQuery("select").not(".disabled").formSelect();

        });

    </script>
}

@section Notification
{
    <div class="row">
        <div class="col s8 offset-s2">

            <div asp-validation-summary="ModelOnly" class="row justify-content-center alert alert-danger validation-model"></div>

        </div>
    </div>
}