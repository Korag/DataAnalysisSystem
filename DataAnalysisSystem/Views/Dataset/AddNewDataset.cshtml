@model DataAnalysisSystem.DTO.DatasetDTO.AddNewDatasetViewModel
@using DataAnalysisSystem.DTO.AdditionalFunctionalities
@using DataAnalysisSystem.DTO.Scripts

@{
    ViewData["Title"] = "Add new dataset";
}

<div class="row" style="margin-top: 5vh; margin-bottom: 2vh">

    <div class="col s12 m10 l8 offset-m1 offset-l2">
        <div class="card">
            <div class="card-content">
                <span class="card-title center-align">Add new Dataset</span>

                @if (Model.DatasetContent != null)
                {
                    <form id="AddNewDatasetForm" method="post" asp-action="AddNewDataset" asp-controller="Dataset" enctype="multipart/form-data" onsubmit="openModalWaiter()">
                        <fieldset disabled="disabled" style="border-width: 0px">

                            <div class="input-field" style="width:70%; margin:auto;">

                                <i class="material-icons prefix">input</i>
                                <input type="text" asp-for="DatasetName" required="" aria-required="true" class="validate">
                                <label asp-for="DatasetName"></label>
                            </div>

                            <div class="file-field">

                                <div class="btn teal darken-4 tooltipped" data-position="left" data-tooltip="Supported formats: .csv, .json, .xml, .xls, .xlsx">
                                    <span>Dataset</span>
                                    <input asp-for="DatasetFile" type="file">
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text" placeholder="Upload dataset" accept=".txt,.csv,.xml,.json,.xls,.xlsx">
                                </div>

                            </div>

                            <ul class="collapsible" style="width:50%; margin-right:0px; margin-left: auto;">
                                <li>
                                    <div class="collapsible-header"><i class="material-icons">call_merge</i>Additional parameters</div>
                                    <div class="collapsible-body">
                                        <ul class="collapsible popout">
                                            <li>
                                                <div class="collapsible-header"><label asp-for="AdditionalParameters.Delimiter"></label></div>
                                                <div class="collapsible-body">
                                                    <input type="text" asp-for="AdditionalParameters.Delimiter" value=";" class="disabled">
                                                </div>
                                            </li>
                                        </ul>
                                    </div>
                                </li>
                            </ul>

                            <div class="center-align" style="margin-top: 10px">
                                <button class="btn waves-effect waves-light" type="submit">
                                    Load
                                </button>
                            </div>

                        </fieldset>
                    </form>
                }
                else
                {
                    <form id="AddNewDatasetForm" method="post" asp-action="AddNewDataset" asp-controller="Dataset" enctype="multipart/form-data" onsubmit="openModalWaiter()">

                        <div class="input-field" style="width:70%; margin:auto;">

                            <i class="material-icons prefix">input</i>
                            <input type="text" asp-for="DatasetName" required="" aria-required="true" class="validate">
                            <label asp-for="DatasetName"></label>

                            <span asp-validation-for="DatasetName" class="helper-text" style="color: #F44336"></span>

                        </div>

                        <div class="file-field">

                            <div class="btn teal darken-4 tooltipped" data-position="left" data-tooltip="Supported formats: .csv, .json, .xml, .xls, .xlsx">
                                <span>Dataset</span>
                                <input asp-for="DatasetFile" type="file">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Upload dataset" accept=".txt,.csv,.xml,.json,.xls,.xlsx">
                            </div>

                            <span asp-validation-for="DatasetFile" class="helper-text" style="color: #F44336"></span>
                        </div>

                        <ul class="collapsible" style="width:50%; margin-right:0px; margin-left: auto;">
                            <li>
                                <div class="collapsible-header"><i class="material-icons">call_merge</i>Additional parameters</div>
                                <div class="collapsible-body">
                                    <ul class="collapsible popout">
                                        <li>
                                            <div class="collapsible-header"><label asp-for="AdditionalParameters.Delimiter"></label></div>
                                            <div class="collapsible-body">
                                                <input type="text" asp-for="AdditionalParameters.Delimiter" value="," class="disabled">
                                                <span asp-validation-for="AdditionalParameters" class="helper-text" style="color: #F44336"></span>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </li>
                        </ul>

                        <div class="center-align" style="margin-top: 10px">
                            <button class="btn waves-effect waves-light" type="submit">
                                Load
                            </button>
                        </div>


                    </form>
                }
            </div>
        </div>

    </div>
</div>

@if (Model.DatasetContent != null)
{
    <form id="DatasetContentForm" method="post" asp-action="SaveNewDataset" asp-controller="Dataset" onsubmit="openModalWaiter()">

        <input type="text" asp-for="DatasetName" hidden readonly>
        <input type="text" asp-for="InputFileName" hidden readonly>
        <input type="text" asp-for="InputFileFormat" hidden readonly>

        <div class="row" style="margin-top: 0vh; margin-bottom: 5vh">
            <div class="col s12">

                <div class="card" style="display:block; margin-bottom: 5vh">
                    <div class="card-content">
                        <span class="card-title">Dataset</span>
                        <div class="left-align" style="margin-top: 10px">
                            <button class="btn waves-effect waves-light" type="submit" id="submitButton">
                                Save
                            </button>
                            <a asp-action="AddNewDataset" asp-controller="Dataset" type="button" class="waves-effect waves-red btn-flat">Cancel</a>
                        </div>

                        @{await Html.RenderPartialAsync("_LoadingIndicatorPartial", "dataTableLoadingIndicator");}

                        <table id="datasetContentTable" class="row-border" cellspacing="0" width="100%" style="display:none">
                            <thead>

                                <tr>
                                    @for (int i = 0; i < Model.DatasetContent.NumberColumns.Count() + Model.DatasetContent.StringColumns.Count(); i++)
                                    {
                                        var numberColumn = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == i).FirstOrDefault();

                                        if (numberColumn != null)
                                        {
                                            <th>@numberColumn.AttributeName</th>
                                        }
                                        else
                                        {
                                            <th>@Model.DatasetContent.StringColumns.Where(z => z.PositionInDataset == i).FirstOrDefault().AttributeName</th>
                                        }
                                    }
                                </tr>

                            </thead>
                            <tbody>

                                @for (int i = 0; i < Model.DatasetContent.NumberColumns.FirstOrDefault().AttributeValue.Count(); i++)
                                {
                                    var n = 0;
                                    var s = 0;

                                    <tr>
                                        @for (int j = 0; j < Model.DatasetContent.NumberColumns.Count() + Model.DatasetContent.StringColumns.Count(); j++)
                                        {
                                            var numberColumn = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();
                                            var position = Model.DatasetContent.NumberColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();


                                            if (numberColumn != null)
                                            {
                                                <td>
                                                    @numberColumn.AttributeValue.ElementAt(i)

                                                    <input asp-for="DatasetContent.NumberColumns[n].AttributeValue[i]" value="@Model.DatasetContent.NumberColumns[n].AttributeValue[i]" readonly hidden />
                                                    <input asp-for="DatasetContent.NumberColumns[n].AttributeName" value="@Model.DatasetContent.NumberColumns[n].AttributeName" readonly hidden />
                                                    <input asp-for="DatasetContent.NumberColumns[n].PositionInDataset" value="@Model.DatasetContent.NumberColumns[n].PositionInDataset" readonly hidden />

                                                    @{n++;}
                                                </td>
                                            }
                                            else
                                            {
                                                var stringColumn = Model.DatasetContent.StringColumns.Where(z => z.PositionInDataset == j).FirstOrDefault();

                                                <td>
                                                    @stringColumn.AttributeValue.ElementAt(i)

                                                    <input asp-for="DatasetContent.StringColumns[s].AttributeValue[i]" value="@Model.DatasetContent.StringColumns[s].AttributeValue[i]" readonly hidden />
                                                    <input asp-for="DatasetContent.StringColumns[s].AttributeName" value="@Model.DatasetContent.StringColumns[s].AttributeName" readonly hidden />
                                                    <input asp-for="DatasetContent.StringColumns[s].PositionInDataset" value="@Model.DatasetContent.StringColumns[s].PositionInDataset" readonly hidden />

                                                    @{s++;}
                                                </td>
                                            }
                                        }
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>

                </div>

            </div>
        </div>

    </form>
}

@if (Model.DatasetContent == null)
{
    @await Component.InvokeAsync("ModalBottomSheetWindow", new ModalBottomSheetViewModel
    {
        ModalIdentificator = "modalWaiter",
        ModalHeader = "Loading a dataset.",
        ModalPrimaryText = "This may take a while."
    })
}
else
{
    @await Component.InvokeAsync("ModalBottomSheetWindow", new ModalBottomSheetViewModel
       {
           ModalIdentificator = "modalWaiter",
           ModalHeader = "Saving a dataset.",
           ModalPrimaryText = "This may take a while."
       })
}

@section Scripts{

    @{await Html.RenderPartialAsync("_ModalBottomSheetScript", new ModalBottomSheetScriptViewModel { ModalIdentificator = "modalWaiter", ModalDismissible = false });}
    @{await Html.RenderPartialAsync("_ValidateFormAndOpenModalScript", new ValidateFormAndOpenModalScriptViewModel { FormId = "AddNewDatasetForm", ModalId = "modalWaiter" });}
    @{await Html.RenderPartialAsync("_DataTableWLoadingIndicatorInitScript", new DataTableInitScriptWithLoadingIndicatorViewModel { DataTableId = "datasetContentTable", LoadingIndicatorId = "dataTableLoadingIndicator" });}
    @{await Html.RenderPartialAsync("_UnwrapDataTableScript", new UnwrapDataTableScriptViewModel { DatasetContent = Model.DatasetContent, DataTableId = "datasetContentTable", ButtonId = "submitButton" });}

    <script>
        $(document).ready(function () {
            $('.tooltipped').tooltip();
            $('.collapsible').collapsible();
        });
    </script>
}

@section Notification
{
    @{await Html.RenderPartialAsync("_NotificationMenuValidationAndMessage", new NotificationMenuViewModel { NotificationContainerId = "notificationContainer" });}
}